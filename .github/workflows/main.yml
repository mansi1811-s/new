name: Pre-Merge Checks

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: pre-merge-check
    runs-on: ubuntu-latest
    strategy:
  #    fail-fast: true
      matrix:
        language: ['python']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t new:v1 .

    - name: Build Docker Image
      run: docker build -t new:v1 .
      # continue-on-error: true

    - name: Set up Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin
        trivy -v

    # - name: Scan Docker Image for Vulnerabilities with Trivy
    #   run: |
    #     trivy image  --severity=HIGH new:v1
    #   # continue-on-error: false
    #   if: ${{ success() }}

    # # - name: Check vulnerability
    # #   run: |
    # #     trivy_output=$(trivy image  --severity=HIGH new:v1)
    # #     if ${{ $trivy_output == 'Total: 0' }}
    # #       echo 'No vulnerability '
    # #     else
    # #       exit 1
    # #     fi
    # - name: Check vulnerability
    #   run: |
    #     trivy_output=$(trivy image --severity HIGH new:v1)
    #     if echo "$trivy_output" | grep -q 'Total: 0'; then
    #       echo 'No vulnerability found'
    #     else
    #       echo 'Vulnerability found'
    #       exit 1
    #     fi
    - name: Scan Docker Image with Trivy
      run: |
        trivy image  --severity=HIGH new:v1
      #  --exit-code 1
      shell: bash
    - name: Convert Trivy Results to SARIF
      run: |
        trivy image --severity=HIGH -f sarif new:v1 > trivy-results.sarif
      shell: bash

    - name: Upload SARIF Report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-results
        path: trivy-results.sarif

    - name: Check for Vulnerabilities
      run: |
        # Use jq to count the number of findings in the SARIF report
        count=$(jq '.runs[0].results | length' trivy-results.sarif)
        if [ "$count" -eq "0" ]; then
          echo "No vulnerabilities found."
        else
          echo "$count vulnerabilities found. Failing the build."
          exit 1
        fi
      shell: bash
